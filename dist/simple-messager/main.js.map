{"version":3,"sources":["./src/app/components/message-sender/message-sender.component.ts","./src/app/components/message-sender/message-sender.component.html","./src/app/modules/material/material.module.ts","./src/environments/environment.ts","./src/app/components/dialog/dialog.component.ts","./src/app/components/dialog/dialog.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/message-receiver/message-receiver.component.ts","./src/app/components/message-receiver/message-receiver.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../dialog/dialog.component';\n\n@Component({\n  selector: 'app-message-sender',\n  templateUrl: './message-sender.component.html',\n  styleUrls: ['./message-sender.component.scss']\n})\nexport class MessageSenderComponent implements OnInit {\n  @ViewChild('inputSite') public inputSite: ElementRef;\n  isValueSite: boolean;\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  checkSiteText(): void {\n    this.isValueSite = !!this.inputSite.nativeElement.value;\n  }\n\n  getTextSite(): void {\n    this.dialog.open(DialogComponent, {\n      data: {\n        site: this.inputSite.nativeElement.value,\n        win: window,\n      }\n    });\n  }\n\n}\n","<div class=\"main\">\n  <mat-form-field appearance=\"outline\" class=\"main__input\">\n    <mat-label>Input site</mat-label>\n    <input matInput placeholder=\"http://...\" #inputSite (keyup)=\"checkSiteText()\">\n  </mat-form-field>\n  <button mat-raised-button color=\"primary\" [disabled]=\"!isValueSite\" (click)=\"getTextSite()\">Open site</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ],\n  exports: [\n    MatDialogModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ]\n})\nexport class MaterialModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, ElementRef, Inject, ViewChild, AfterViewInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\ninterface DialogData {\n  site: string;\n  win: any;\n}\n@Component({\n  selector: 'message-window-dialog',\n  templateUrl: './dialog.component.html',\n})\nexport class DialogComponent implements AfterViewInit {\n  @ViewChild('inputMessage') public inputMessage: ElementRef;\n  @ViewChild('frameDialog') public frameDialog: ElementRef;\n  isValueMessage: boolean;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  ngAfterViewInit(): void {\n    this.frameDialog.nativeElement.src = this.data.site;\n  }\n\n  startHello(): void {\n    this.frameDialog.nativeElement.contentWindow.postMessage('Hello world!', '*');\n  }\n\n  checkMessageText(): void {\n    this.isValueMessage = !!this.inputMessage.nativeElement.value;\n  }\n\n  sendMessage(): void {\n    const message = this.inputMessage.nativeElement.value;\n    this.frameDialog.nativeElement.contentWindow.postMessage(message, '*');\n  }\n}\n","<h1 mat-dialog-title>Dialog for messages</h1>\n<div mat-dialog-content>\n  <div class=\"dialog\">\n    <mat-form-field appearance=\"outline\" class=\"dialog__input\">\n      <mat-label>Input message</mat-label>\n      <input matInput #inputMessage (keyup)=\"checkMessageText()\">\n    </mat-form-field>\n\n    <button class=\"dialog__btn\" mat-raised-button color=\"primary\" [disabled]=\"!isValueMessage\" (click)=\"sendMessage()\">Send\n      message</button>\n  </div>\n  <div class=\"dialog__site\">\n    <iframe class=\"dialog__site_frame\" #frameDialog (load)=\"startHello()\"></iframe>\n  </div>\n</div>\n\n<div mat-dialog-actions>\n  <button mat-button mat-dialog-close>Close</button>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'simple-messager';\n  isParent = !(window.parent === window);\n}\n","<app-message-receiver *ngIf=\"isParent\"></app-message-receiver>\n<app-message-sender *ngIf=\"!isParent\"></app-message-sender>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './modules/material/material.module';\nimport { MessageSenderComponent } from './components/message-sender/message-sender.component';\nimport { MessageReceiverComponent } from './components/message-receiver/message-receiver.component';\nimport { DialogComponent } from './components/dialog/dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MessageSenderComponent,\n    MessageReceiverComponent,\n    DialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\ntype messageType = {\n  message: string,\n  from: string,\n};\n@Component({\n  selector: 'app-message-receiver',\n  templateUrl: './message-receiver.component.html',\n  styleUrls: ['./message-receiver.component.scss']\n})\nexport class MessageReceiverComponent implements OnInit {\n  messageList: messageType[] = [];\n  currentSite = location.toString();\n\n  constructor() {\n    window.onmessage = (e) => {\n      this.messageList.push({\n        message: e.data,\n        from: e.origin,\n      });\n    };\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"head\">\n  Current site:\n  <span class=\"head__site\">{{currentSite}} </span>\n</div>\n<div class=\"messages\">\n  <div *ngFor=\"let oneMessage of messageList\" class=\"message\">\n    <div class=\"message__from\">\n      Message from:\n      <span class=\"message__from_site\">\n        {{oneMessage.from}}\n      </span>\n    </div>\n    <div class=\"message__text\">\n      {{oneMessage.message|json}}\n    </div>\n  </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}